@using FoodDeliveryWebApp.ViewModels
@model OrderItemViewModel
@{
    ViewData["Title"] = "Payment Page";
    ViewData["PageType"] = "PaymentPage";
    // Layout = "~/Views/Shared/_Layout.cshtml";

    // var orderData = TempData["OrderData"] as Order;
    var orderData = TempData["OrderData"] as OrderViewModel;
}

<style>
    body {
        background: #f5f5f5
    }

    .rounded {
        border-radius: 1rem
    }

    .nav-pills .nav-link {
        color: #555
    }

        .nav-pills .nav-link.active {
            color: white
        }

    input[type="radio"] {
        margin-right: 5px
    }

    .bold {
        font-weight: bold
    }

    .card{
    max-width: 1000px;
    margin: 2vh;
}
.card-top{
    padding: 0.7rem 5rem;
}
.card-top a{
    float: left;
    margin-top: 0.7rem;
}
#logo{
    font-family: 'Dancing Script';
    font-weight: bold;
    font-size: 1.6rem;
}
/* .card-body{
    padding: 0 5rem 5rem 5rem;
    background-image: url("https://i.imgur.com/4bg1e6u.jpg");
    background-size: cover;
    background-repeat: no-repeat;
} */

.row{
    margin: 0;
}
.upper{
    padding: 1rem 0;
    justify-content: space-evenly;
}
#three{
    border-radius: 1rem;
        width: 22px;
    height: 22px;
    margin-right:3px;
    border: 1px solid blue;
    text-align: center;
    display: inline-block;
}
#payment{
    margin:0;
    color: blue;
}
.icons{
    margin-left: auto;
}
form span{
    color: rgb(179, 179, 179);
}
form{
    padding: 2vh 0;
}
input{
    border: 1px solid rgba(0, 0, 0, 0.137);
    padding: 1vh;
    margin-bottom: 4vh;
    outline: none;
    width: 100%;
    background-color: rgb(247, 247, 247);
}
input:focus::-webkit-input-placeholder
{
      color:transparent;
}
.header{
    font-size: 1.5rem;
}
.left{
    background-color: #ffffff;
    padding: 2vh;   
}
.left img{
    width: 2rem;
}
.left .col-4{
    padding-left: 0;
}
.right .item{
    padding: 0.3rem 0;
}
.right{
    background-color: #ffffff;
    padding: 2vh;
}
.col-8{
    padding: 0 1vh;
}
.lower{
    line-height: 2;
}
.btn-order{
    background-color: rgb(23, 4, 189);
    border-color: rgb(23, 4, 189);
    color: white;
    width: 100%;
    font-size: 0.7rem;
    margin: 4vh 0 1.5vh 0;
    padding: 1.5vh;
    border-radius: 0;
}

.btn-order:focus {
    box-shadow: none;
    outline: none;
    box-shadow: none;
    color: white;
    -webkit-box-shadow: none;
    -webkit-user-select: none;
    transition: none; 
}

.btn-order:hover {
    color: white;
}
a{
    color: black;
}
a:hover{
    color: black;
    text-decoration: none;
}
input[type=checkbox]{
    width: unset;
    margin-bottom: unset;
}
#cvv{
    background-image: linear-gradient(to left, rgba(255, 255, 255, 0.575) , rgba(255, 255, 255, 0.541)), url("https://img.icons8.com/material-outlined/24/000000/help.png");
    background-repeat: no-repeat;
    background-position-x: 95%;
    background-position-y: center;
} 
#cvv:hover{

}
</style>

<div class="container-xxl py-5">
    <div class="container">
    </div>
</div>


<div class="container-xxl py-5">
    <div class="card">
        <div class="card-top border-bottom text-center">
            <a href="#"> Back to shop</a>
            <span id="logo">Your can pay here</span>
        </div>
        <div class="card-body">
            <div class="row upper">
                <div class="col-md-3">
                    <span id="cardTab" class="paymentTab active btn btn-outline-success">Pay by Card</span>

                </div>
                <div class="col-md-3">
                    <span id="cashTab" class="paymentTab btn btn-outline-success">Pay by Cash</span>

                </div>
                 <div class="col-md-6">

                </div>
                
            </div>
            
            <div class="row">

                <div id="cardPaymentForm" class="col-md-7 paymentForm">
                        <div class="left border">
                            <div class="row">
                                <span class="header">Pay by card</span>
                                <div class="icons">
                                    <img src="https://img.icons8.com/color/48/000000/visa.png" />
                                    <img src="https://img.icons8.com/color/48/000000/mastercard-logo.png" />
                                    <img src="https://img.icons8.com/color/48/000000/maestro.png" />
                                </div>
                            </div>
                            <form>
                                <span>Cardholder's name:</span>
                                <input id="cardholderName" placeholder="Linda Williams">
                                <span>Address:</span>
                                <input id="address" placeholder="Your address">
                                <span>Card Number:</span>
                                @* <input id="cardNumber" placeholder="0125 6780 4567 9909"> *@
                                <input id="cardNumber" placeholder="Card Number (16 digits)" pattern="\d{16}" title="Enter a 16-digit card number">


                                <div class="row">
                                    <div class="col-4">
                                        <span>Expiry date:</span>
                                        @* <input id="expiryDate" placeholder="YY/MM"> *@
                                        <input id="expiryDate" placeholder="MM/YY" pattern="\d{2}/\d{2}" title="Enter expiry date in MM/YY format">

                                    </div>
                                    <div class="col-4">
                                        <span>CVV:</span>
                                        @* <input id="cvv"> *@
                                        <input id="cvv" placeholder="3 or 4" pattern="\d{3,4}" title="Enter a 3 or 4-digit CVV">
                                    </div>
                                </div>
                                <input type="checkbox" id="save_card" class="align-left">
                                <label for="save_card">Save card details to wallet</label>
                            </form>
                        </div>
                    </div>

                <div id="cashPaymentForm" class="col-md-7 left border paymentForm">
                            <div class="row">
                                <span class="header">Pay by cash</span>
                                
                            </div>
                        <form id="cashForm">
                            <span>Address:</span>
                            <input id="cashAddress" placeholder="Your address" required>
                        </form>
                    </div>

                

                <div class="col-md-5">
                    <div class="right border">
                        <div class="header">Order Summary</div>

                        <div class="row item">
                            <div class="col-4 align-self-center"><img class="img-fluid" src="@Model.ProductImageUrl" alt="image name"></div>
                            <div class="col-8">
                                <div class="row"><b>@($"{Model.ProductPrice * 4100}៛") / @Model.ProductPrice.ToString("C")</b></div>
                                <div class="row text-muted">@Model.ProductName</div>
                                <div class="row">Qty: @Model.Quantity</div>
                            </div>
                        </div>

                        <hr>

                        <div class="row lower">
                            <div class="col text-left">Subtotal</div>
                            <div class="col text-right">@($"{Model.ProductPrice * Model.Quantity * 4100}៛") / @($"{Model.ProductPrice * Model.Quantity}$")</div>
                        </div>

                        <div class="row lower">
                            <div class="col text-left">Delivery</div>
                            <div class="col text-right">Free</div>
                        </div>

                        <div class="row lower">
                            <div class="col text-left"><b>Total to pay</b></div>
                            <div class="col text-right"><b>@($"{Model.ProductPrice * Model.Quantity * 4100}៛") / @($"{Model.ProductPrice * Model.Quantity}$")</b></div>
                        </div>

                        @* <div class="row lower">
                            <div class="col text-left"><a href="#"><u>Add promo code</u></a></div>
                        </div> *@

                        <button class="btn-order payButton" type="submit">Place order</button>

                        <p class="text-muted text-center">Complimentary Shipping & Returns</p>
                    </div>

                </div>

            </div>
        </div>

        <div>
        </div>
    </div>
</div>

    @section Scripts
    {
        <script type="text/javascript">

        $(document).ready(function () {
            // Retrieve stored order information
            var tempOrder = JSON.parse(localStorage.getItem('tempOrder'));
            console.log(tempOrder);

            // Hide cash payment form initially
            $("#cashPaymentForm").hide();

            // Toggle visibility of cash payment form when "Pay by Cash" tab is clicked
            $("#cashTab").click(function () {
                $("#cashPaymentForm").show();
                $("#cardPaymentForm").hide();
                $(this).addClass("active");
                $("#cardTab").removeClass("active");
            });

            // Toggle visibility of card payment form when "Pay by Card" tab is clicked
            $("#cardTab").click(function () {
                $("#cashPaymentForm").hide();
                $("#cardPaymentForm").show();
                $(this).addClass("active");
                $("#cashTab").removeClass("active");
            });

            $('.paymentTab').on('click', function () {
                $('.paymentTab').removeClass('active');
                $(this).addClass('active');
                var paymentMethod = $(this).attr('id').replace('Tab', '');
                $('.paymentForm').hide();
                $('#' + paymentMethod + 'PaymentForm').show();
            });

            

            // Handle payment details and order completion
            $('.payButton').on('click', function () {

                // Check if user is logged in or not
                $.get('/FrontPages/CheckLogin', function (isLoggedIn) {
                    if (isLoggedIn) {
                        // User is logged in
                        Swal.fire({
                            icon: 'success',
                            title: 'Remove from cart',
                            text: 'Your are now can make an order.',
                        }).then((result) => {
                            var paymentMode = $('.paymentTab.active').attr('id').replace('Tab', '');

                            if (paymentMode === 'card') {
                                // Collect payment details from the user
                                var paymentData = {
                                    Name: $('#cardholderName').val(),
                                    Address: $('#address').val(),
                                    CardNo: $('#cardNumber').val(),
                                    ExpiryDate: $('#expiryDate').val(),
                                    CvvNo: $('#cvv').val(),
                                };
                            } else if (paymentMode === 'cash') {
                                var paymentData = {
                                    Address: $('#cashAddress').val(),
                                };
                            }

                            // Validate payment details
                            if (!validatePaymentDetails(paymentData)) {
                                // Display error message or handle invalid details
                                return;
                            }

                            // Disable the pay button during processing
                            $(this).prop('disabled', true);

                            placeOrder(tempOrder, paymentData, paymentMode);
                        });
                    } else {
                        // User not logged in
                        Swal.fire({
                            icon: 'error',
                            title: 'Please, log in first',
                            text: 'You are not login!',
                        }).then((result) => {
                            // Redirect to login page
                            window.location.href = '/Account/Login';
                        });
                    }
                });

                


            });

            

            // Function to validate payment details
            function validatePaymentDetails(paymentData, paymentMode) {
                if (paymentMode === 'card') {
                    if (!isValidCardNumber(paymentData.CardNo) || !isValidExpiryDate(paymentData.ExpiryDate) || !isValidCVV(paymentData.CvvNo)) {
                        // Display error message or alert
                        console.log('Invalid Payment Details:', paymentData);
                        Swal.fire({
                            title: 'Validation Error',
                            text: 'Invalid payment details. Please check and try again.',
                        });
                        return false;
                    }
                } else if (paymentMode === 'cash') {
                    if (!paymentData.Address) {
                        // Display error message or alert
                        console.log('Invalid Payment Details:', paymentData);
                        Swal.fire({
                            title: 'Validation Error',
                            text: 'Please provide your address for cash payment.',
                        });
                        return false;
                    }
                }

                return true;
            }

            // Function to check if the card number is valid (modify based on your validation logic)
            function isValidCardNumber(cardNumber) {
                // Example: Check if the card number follows a valid format
                return /^\d{16}$/.test(cardNumber);
            }

            // Function to check if the expiry date is valid (modify based on your validation logic)
            function isValidExpiryDate(expiryDate) {
                // Example: Check if the expiry date follows a valid format
                return /^\d{2}\/\d{2}$/.test(expiryDate);
            }

            // Function to check if the CVV is valid (modify based on your validation logic)
            function isValidCVV(cvv) {
                // Example: Check if the CVV follows a valid format
                return /^\d{3,4}$/.test(cvv);
            }

            // Function to place the order (replace with actual AJAX request)
            function placeOrder(orderData, paymentData, paymentMode) {
                paymentData.PaymentMode = paymentMode;

                console.log('Order Data:', orderData);
                console.log('Payment Data:', paymentData);
                $.ajax({
                    url: '/Orders/ProcessOrder',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ Order: orderData, Payment: paymentData }),
                    success: function (orderResult) {
                        console.log('Order placed successfully:', orderResult);

                        // // Display success message or redirect to a confirmation page
                        alert('Order placed successfully!');
                        window.location.href = '/Orders/ConfirmationPage?orderId=' + orderResult.orderId;

                    },
                    error: function () {
                        console.error('Error placing order.');
                        // Handle error
                    },
                    complete: function () {
                        // Re-enable the pay button after processing
                        $('.payButton').prop('disabled', false);
                    }
                });
            }
        });

            $(function () {
                $('[data-toggle="tooltip"]').tooltip()
            })

       



        </script>
    }
