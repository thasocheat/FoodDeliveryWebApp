﻿@using FoodDeliveryWebApp.ViewModels
@model ProductCategoryViewModel
@{
    ViewData["Title"] = "Front View Product";
    ViewData["PageType"] = "Menu";
    // Layout = "~/Views/Shared/_Layout.cshtml";
    var khmerCulture = new System.Globalization.CultureInfo("km-KH");
}

<style>
    .addToCartBtn{
        cursor: pointer;
    }
    .removeFromCartBtn{
        cursor: pointer;
    }

    .view-detail-product {
        cursor: pointer;
    }
</style>

<div class="container-xxl py-5">
    <div class="container">
    </div>
</div>


<div class="container-xxl py-5 mt-5">
    <div class="container">
        <div class="row g-0 gx-5 align-items-end">
            <div class="col-lg-6">
                <div class="section-header text-start mb-5 wow fadeInUp" data-wow-delay="0.1s" style="max-width: 500px; visibility: visible; animation-delay: 0.1s; animation-name: fadeInUp;">
                    <h1 class="display-5 mb-3">Our Products</h1>
                    <p>Tempor ut dolore lorem kasd vero ipsum sit eirmod sit. Ipsum diam justo sed rebum vero dolor duo.</p>
                </div>
            </div>
            <div class="col-lg-6 text-start text-lg-end wow slideInRight" data-wow-delay="0.1s" style="visibility: visible; animation-delay: 0.1s; animation-name: slideInRight;">
                <input type="hidden" id="selectedCategoryId" value="@Model.SelectedCategoryId" />
                <ul class="nav nav-pills d-inline-flex justify-content-end mb-5">
                    @foreach(var category in Model.Categories)
                    {
                        <li class="nav-item me-2">
                            @* <a class="btn btn-outline-primary border-2 category-btn" data-bs-toggle="pill" href="#tab-1" data-category-id="@category.CategoryId">@category.CategoryName</a> *@
                            <a class="btn btn-outline-primary border-2 category-btn @((Model.SelectedCategoryId == category.CategoryId) ? "active" : "")" data-bs-toggle="pill" href="#" data-category-id="@category.CategoryId">@category.CategoryName</a>
                        </li>
                    }                    
                </ul>
            </div>
        </div>
        <div class="tab-content">
            <div id="tab-1" class="tab-pane fade show p-0 active">
                <div class="row g-4" id="filteredProductListContainer">

                    @foreach (var product in Model.Products.Where(p => !Model.SelectedCategoryId.HasValue || p.CategoryId == Model.SelectedCategoryId.Value))
                    {
                        @if (!Model.SelectedCategoryId.HasValue || product.CategoryId == Model.SelectedCategoryId.Value)
                        {
                            <div class="col-xl-3 col-lg-4 col-md-6 wow fadeInUp filteredProductListContainer" data-wow-delay="0.1s" style="visibility: visible; animation-delay: 0.1s; animation-name: fadeInUp;">
                                <div class="product-item img-thumbnail">
                                    <div class="position-relative bg-light overflow-hidden" style="height: 200px;">
                                        <img class="img-fluid w-100" style="object-fit: cover;" src="@product.ImageUrl" alt="@product.Name">
                                        <div class="bg-secondary rounded text-white position-absolute start-0 top-0 m-4 py-1 px-3">New</div>
                                    </div>
                                    <div class="text-center p-4">
                                        <a class="d-block h5 mb-2 view-detail-product" data-product-id="@product.ProductId">@product.Name</a>
                                        @{
                                            double InKhmer = product.Price * 4100;
                                        }
                                        <span class="text-primary me-1">@(string.Format(khmerCulture, "{0:C2}", InKhmer)) / </span>
                                        <span class="text-primary me-1">$@product.Price</span>
                                    </div>
                                    <div class="d-flex border-top">
                                        <small class="w-50 text-center border-end py-2">
                                            <a class="text-body view-detail-product" data-product-id="@product.ProductId"><i class="fa fa-eye text-primary me-2"></i>View detail</a>
                                            <script>
                                                function redirectToProductDetailPage() {
                                                    // Assuming your create form action is named "Create"
                                                    var createFormUrl = '@Url.Action("Login", "Account")';
                                                    window.location.href = createFormUrl;
                                                }

                                            </script>
                                        </small>
                                        <small class="w-50 text-center py-2">
                                            <a class="addToCartBtn text-body" data-product-id="@product.ProductId">
                                                <i class="fa fa-shopping-bag text-primary me-2"></i>Add to Cart
                                            </a>
                                            <a class="removeFromCartBtn text-body" data-product-id="@product.ProductId" style="display: none;">
                                                <i class="fa fa-shopping-bag text-primary me-2"></i>Remove from Cart
                                            </a>

                                        </small>
                                    </div>
                                </div>
                            </div>
                        }
                       
                    }

                    <div class="col-12 text-center" data-wow-delay="0.1s" style="visibility: visible;">
                        <a class="btn btn-primary rounded-pill py-3 px-5" id="loadMoreBtn" href="#">Browse More Products</a>
                    </div>
                </div>
            </div>
            
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {

            initializeCartState();
            updateCartItemCount();
            updateCategoryButtonStates();

            // Attach a click event to category buttons
            $('.category-btn').on('click', function () {
                var categoryId = $(this).data('category-id');

                // console.log('Clicked category id:', categoryId);

                $('#selectedCategoryId').val(categoryId);

                // Make an AJAX request to get filtered products
                $.get('/FrontPages/GetFilteredProducts', { categoryId: categoryId }, function (data) {

                    // console.log('Received data:', data);

                    // Update the product list
                    // $('#filteredProductListContainer').empty();
                    updateProductList(data);
                    IsProductInCart(productId);
                    updateCategoryButtonStates();
                    // Add your code to append the new products to the list
                    // ...
                });
            });

            // Function to update category button states based on cart content
            function updateCategoryButtonStates() {
                $('.category-btn').each(function () {
                    var categoryId = $(this).data('category-id');
                    IsCategoryInCart(categoryId, $(this));
                });
            }

            // Function to check if a category is in the cart
            function IsCategoryInCart(categoryId, button) {
                // Make an AJAX request to check if any product in the category is in the cart
                $.get('/FrontPages/IsCategoryInCart', { categoryId: categoryId }, function (isInCart) {
                    if (isInCart) {
                        // Products in the category are in the cart, update button accordingly
                        button.addClass('active');
                    } else {
                        // No products in the category are in the cart
                        button.removeClass('active');
                    }
                });
            }


            var categoryId = $('#filteredProductListContainer').data('category-id');
            var totalLoaded = 4;

            $('#loadMoreBtn').on('click', function () {
                // Make an AJAX request to get more products
                $.get('/FrontPages/GetMoreProducts', { categoryId: categoryId, totalLoaded: totalLoaded }, function (data) {
                    console.log(data);
                    if (data.length > 0) {
                        // updateProductList(products);
                        totalLoaded += data.length;
                    } else {
                        // No more products to load
                        $('#loadMoreBtn').prop('disabled', true).text('No More Products');
                    }
                });
            });



            // $('.addToCartBtn').on('click', function (){
            //     var button = $(this);
            //     var productId = $(this).data('product-id');

            //     // Check if user is logged in or not
            //     $.get('/FrontPages/CheckLogin', function (isLoggedIn) {
            //         if(isLoggedIn){
            //             // User is logged in
            //             // alert('Product added to your cart.');
            //             // toastr.success("Product added to your cart.");
            //             Swal.fire({
            //                 icon: 'success',
            //                 title: 'Add to cart',
            //                 text: 'Your product has been added to cart successfully.',
            //             }).then((result) => {
            //                 addToCart(productId, button);
            //                 updateCartItemCount();
            //                 // Attach click event to cart buttons after updating the product list
            //                 attachCartButtonClickEvents();
            //             });
                       
            //             // console.log(isLoggedIn);
                        
            //             // updateCartItemCount();
            //             // console.log(productId, button);
            //         }else{
            //             // User not logged in
            //             // toastr.error("Please log in to add the product to your cart.");
            //             // alert('Please log in to add the product to your cart.');
            //             Swal.fire({
            //                 icon: 'error',
            //                 title: 'Error add to cart',
            //                 text: 'Please log in to add the product to your cart.',
            //             }).then((result) => {
            //                 // Redirect to login page
            //                 window.location.href = '/Account/Login';
            //             });

            //         }
            //     });
            // });

            // // Attach click event to Remove from Cart buttons
            // $('.removeFromCartBtn').on('click', function (isLoggedIn) {
            //     var productId = $(this).data('product-id');
            //     if (isLoggedIn) {
            //         // User is logged in
            //         // toastr.success("Product removed from your cart.");
            //         // console.log(isLoggedIn);
            //         Swal.fire({
            //             icon: 'success',
            //             title: 'Remove from cart',
            //             text: 'Your product has been removed from cart successfully.',
            //         }).then((result) => {
            //                 removeFromCart(productId, $(this));
            //                 // Attach click event to cart buttons after updating the product list
            //                 attachCartButtonClickEvents();
            //                 updateCartItemCount();
            //             });
            //     } else {
            //         // User not logged in
            //         // toastr.error("Please log in to add the product to remove your cart.");
            //         // alert('Please log in to add the product to your cart.');
            //         Swal.fire({
            //             icon: 'error',
            //             title: 'Error remove from cart',
            //             text: 'You are not login!',
            //         }).then((result) => {
            //             // Redirect to login page
            //             window.location.href = '/Account/Login';
            //         });

            //     }
                
            // });

            // ...

            // $('.addToCartBtn, .removeFromCartBtn').on('click', function () {
            //     var button = $(this);
            //     var productId = button.data('product-id');

            //     // Check if user is logged in or not
            //     $.get('/FrontPages/CheckLogin', function (isLoggedIn) {
            //         if (isLoggedIn) {
            //             // User is logged in
            //             Swal.fire({
            //                 icon: 'success',
            //                 title: (button.hasClass('addToCartBtn') ? 'Add to cart' : 'Remove from cart'),
            //                 text: 'Your product has been ' + (button.hasClass('addToCartBtn') ? 'added' : 'removed') + ' from cart successfully.',
            //             }).then((result) => {
            //                 // Toggle button class and text
            //                 button.toggleClass('addToCartBtn removeFromCartBtn').html('<i class="fa fa-shopping-bag text-primary me-2"></i>' + (button.hasClass('addToCartBtn') ? 'Add to Cart' : 'Remove from Cart'));

            //                 // Call the common function to handle cart state
            //                 attachCartButtonClickEvents(productId, button);

            //                 // Update cart item count
            //                 updateCartItemCount();
            //             });
            //         } else {
            //             // User not logged in
            //             Swal.fire({
            //                 icon: 'error',
            //                 title: 'Error ' + (button.hasClass('addToCartBtn') ? 'add to cart' : 'remove from cart'),
            //                 text: 'Please log in to ' + (button.hasClass('addToCartBtn') ? 'add the product to your cart' : 'remove the product from your cart') + '.',
            //             }).then((result) => {
            //                 // Redirect to login page
            //                 window.location.href = '/Account/Login';
            //             });
            //         }
            //     });
            // });


            // Attach click event to Add to Cart buttons
            $('.addToCartBtn').on('click', function () {
                var button = $(this);
                var productId = button.data('product-id');

                // Check if user is logged in or not
                $.get('/FrontPages/CheckLogin', function (isLoggedIn) {
                    if (isLoggedIn) {
                        // User is logged in
                        Swal.fire({
                            icon: 'success',
                            title: 'Add to cart',
                            text: 'Your product has been added to cart successfully.',
                        }).then((result) => {
                            // Toggle visibility of Add to Cart and Remove from Cart buttons
                            button.hide();
                            button.siblings('.removeFromCartBtn').show();

                            // Add the product to the cart
                            addToCart(productId);
                            // Update cart item count
                            updateCartItemCount();
                        });
                    } else {
                        // User not logged in
                        Swal.fire({
                            icon: 'error',
                            title: 'Error add to cart',
                            text: 'Please log in to add the product to your cart.',
                        }).then((result) => {
                            // Redirect to login page
                            window.location.href = '/Account/Login';
                        });
                    }
                });
            });

            // Attach click event to Remove from Cart buttons
            $('.removeFromCartBtn').on('click', function () {
                var button = $(this);
                var productId = button.data('product-id');

                // Check if user is logged in or not
                $.get('/FrontPages/CheckLogin', function (isLoggedIn) {
                    if (isLoggedIn) {
                        // User is logged in
                        Swal.fire({
                            icon: 'success',
                            title: 'Remove from cart',
                            text: 'Your product has been removed from cart successfully.',
                        }).then((result) => {
                            // Toggle visibility of Add to Cart and Remove from Cart buttons
                            button.hide();
                            button.siblings('.addToCartBtn').show();

                            // Remove the product from the cart
                            removeFromCart(productId);
                            // Update cart item count
                            updateCartItemCount();
                        });
                    } else {
                        // User not logged in
                        Swal.fire({
                            icon: 'error',
                            title: 'Error remove from cart',
                            text: 'You are not login!',
                        }).then((result) => {
                            // Redirect to login page
                            window.location.href = '/Account/Login';
                        });
                    }
                });
            });

            // ...

           



            $('.view-detail-product').on('click', function () {
                // Get the product ID from the clicked element's data attribute or another source
                var productId = $(this).data('product-id');

                // Redirect to the product detail page
                window.location.href = '/FrontPages/ProductDetail?productId=' + productId;
            });



        });



        

            
            function updateCartItemCount() {
                $.ajax({
                    url: '/FrontPages/CountCarts',
                    type: 'GET',
                    success: function (data) {
                        // Check if CartItemCount is present in the response
                        console.log(data);
                        if (data && data.cartItemCount !== undefined) {
                            // Update the UI with the cart count
                            $('#cartItemCountContainer').html(
                                `<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            ${data.cartItemCount}
                            <span class="visually-hidden">unread messages</span>
                        </span>`
                            );
                        } else {
                            // No cart found, show 0
                            $('#cartItemCountContainer').html(
                                `<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            0
                            <span class="visually-hidden">unread messages</span>
                        </span>`
                            );
                        }
                    },
                    error: function () {
                        console.error('Error fetching cart count.');
                    }
                });
            }

            function addToCart(productId, button){
                $.post('/FrontPages/AddToCart', {productId: productId}, function(data){
                    if(data.success){
                        // Update button
                        // button.removeClass('addToCartBtn').addClass('removeFromCartbtn').text('Remove from Cart');
                        // console.log(data);
                        button.show();
                        $('.addToCartBtn[data-product-id="' + productId + '"]').hide();
                    }else{
                        alert(data.message);
                    }
                });
            }

            // Function to remove product from cart
            function removeFromCart(productId, button) {
                $.post('/FrontPages/RemoveFromCart', { productId: productId }, function (data) {
                    if (data.success) {
                        // Update button
                        button.hide();
                        $('.addToCartBtn[data-product-id="' + productId + '"]').show();
                    } else {
                        alert(data.message);
                    }
                });
            }

            function initializeCartState() {
                $('.addToCartBtn').each(function () {
                    var productId = $(this).data('product-id');
                    IsProductInCart(productId); // Call the function to update button visibility
                });
            }


            function IsProductInCart(productId) {
                // Make an AJAX request to check if the product is in the cart
                $.get('/FrontPages/IsProductInCart', { productId: productId }, function (isInCart) {
                    if (isInCart) {
                        // Product is in the cart, update button accordingly
                        $('.addToCartBtn[data-product-id="' + productId + '"]').hide();
                        $('.removeFromCartBtn[data-product-id="' + productId + '"]').show();
                    } else {
                        // Product is not in the cart, update button accordingly
                        $('.addToCartBtn[data-product-id="' + productId + '"]').show();
                        $('.removeFromCartBtn[data-product-id="' + productId + '"]').hide();
                    }
                });
            }

        function appendProducts(products) {
            // Append the new products to the existing list
            var productListContainer = $("#filteredProductListContainer");
            for (var i = 0; i < products.length; i++) {
                // Example: Append product name to the product list div
                $("#productList").append("<p>" + products[i].ProductName + "</p>");
                var productItem = $('<div class="col-xl-3 col-lg-4 col-md-6 wow fadeInUp">').append(
                    $('<div class="product-item img-thumbnail">').append(
                        $('<div class="position-relative bg-light overflow-hidden" style="height: 200px;">').append(
                            $('<img class="img-fluid w-100" alt="' + products[i].name + '">').attr('src', products[i].imageUrl),
                            $('<div class="bg-secondary rounded text-white position-absolute start-0 top-0 m-4 py-1 px-3">').text('New')
                        ),
                        $('<div class="text-center p-4">').append(
                            $('<a class="d-block h5 mb-2">').text(products[i].name),
                            $('<span class="text-primary me-1">').text('$' + products[i].price),
                            $('<span class="text-body text-decoration-line-through">').text('$29.00')
                        ),
                        $('<div class="d-flex border-top">').append(
                            $('<small class="w-50 text-center border-end py-2">').append(
                                $('<a class="text-body" href="#">').html('<i class="fa fa-eye text-primary me-2"></i>View detail')
                            ),
                            $('<small class="w-50 text-center py-2">').append(
                                $('<a class="text-body" href="#">').html('<i class="fa fa-shopping-bag text-primary me-2"></i>Add to cart')
                            )
                        )
                    )
                );
            }
        }

        function updateProductList(products) {
            // Assuming you have a container with the ID 'filteredProductListContainer'
            var productListContainer = $("#filteredProductListContainer");

            // Clear existing content
            productListContainer.empty();

            // Iterate over the products and append them to the container
            $.each(products, function (index, product) {
                // Make an AJAX request to check if the product is in the cart
                $.get('/FrontPages/IsProductInCart', { productId: product.productId }, function (isInCart) {
                    var productItem = $('<div class="col-xl-3 col-lg-4 col-md-6 wow fadeInUp">').append(
                        $('<div class="product-item img-thumbnail">').append(
                            $('<div class="position-relative bg-light overflow-hidden" style="height: 200px;">').append(
                                $('<img class="img-fluid w-100" alt="' + product.name + '">').attr('src', product.imageUrl),
                                $('<div class="bg-secondary rounded text-white position-absolute start-0 top-0 m-4 py-1 px-3">').text('New')
                            ),
                            $('<div class="text-center p-4">').append(
                                $('<a class="d-block h5 mb-2 view-detail-product">').text(product.name),
                                $('<span class="text-primary me-1">').text('$' + product.price),
                                $('<span class="text-body text-decoration-line-through">').text('$29.00')
                            ),
                            $('<div class="d-flex border-top">').append(
                                $('<small class="w-50 text-center border-end py-2">').append(
                                    $('<a class="text-body view-detail-product" href="#">').html('<i class="fa fa-eye text-primary me-2"></i>View detail')
                                ),
                                $('<small class="w-50 text-center py-2">').append(
                                    // Use conditional (ternary) operator to decide which button to show
                                    isInCart ?
                                        $('<a class="removeFromCartBtn Btn text-body" data-product-id="' + product.productId + '">').html('<i class="fa fa-shopping-bag text-primary me-2"></i>Remove from cart') :
                                        $('<a class="addToCartBtn text-body" data-product-id="' + product.productId + '">').html('<i class="fa fa-shopping-bag text-primary me-2"></i>Add to cart')
                                )
                            )
                        )
                    );

                    productListContainer.append(productItem);
                });
            });
        }


        // Function to attach click events to cart buttons
        function attachCartButtonClickEvents() {
            // $('.cartBtn').off('click').on('click', function () {
            //     var productId = $(this).data('product-id');
            //     var button = $(this);

                // Check if the product is in the cart
                $.get('/FrontPages/IsProductInCart', { productId: productId }, function (isInCart) {
                    if (isInCart) {
                        // Product is in the cart, remove it
                        removeFromCart(productId, button);
                        // Product is in the cart, update button accordingly
                        IsProductInCart(productId);
                        updateProductList(products)
                    } else {
                        // Product is not in the cart, add it
                        addToCart(productId, button);
                        // Product is not in the cart, update button accordingly
                        IsProductInCart(productId);
                        updateProductList(products)
                    }
                });
            // });
        }

    </script>
}